/**
 * File generated by Jenny -- https://github.com/LanderlYoung/Jenny
 *
 * DO NOT EDIT THIS FILE.
 *
 * For bug report, please refer to github issue tracker https://github.com/LanderlYoung/Jenny/issues.
 */

/* C++ header file for class io/eontimer/audio/Deleter$Native */
#pragma once

#include <jni.h>

namespace DeleteFn {
namespace Native {

// DO NOT modify
static constexpr auto FULL_CLASS_NAME = u8"io/eontimer/audio/Deleter$Native";


/*
 * Class:     io.eontimer.audio.Deleter$Native
 * Method:    public static final void delete$eon_timer_audio(long rawAddress, long pointer)
 * Signature: (JJ)V
 */
void JNICALL delete$eon_timer_audio(JNIEnv* env, jclass clazz, jlong rawAddress, jlong pointer);

/**
* register Native functions
* @returns success or not
*/
inline bool registerNativeFunctions(JNIEnv* env) {
// 1. C++20 has u8"" string as char8_t type, we should cast them.
// 2. jni.h has JNINativeMethod::name as char* type not const char*. (while Android does)
#define jenny_u8cast(u8) const_cast<char *>(reinterpret_cast<const char *>(u8))
   const JNINativeMethod gsNativeMethods[] = {
       {
           /* method name      */ jenny_u8cast(u8"delete$eon_timer_audio"),
           /* method signature */ jenny_u8cast(u8"(JJ)V"),
           /* function pointer */ reinterpret_cast<void *>(delete$eon_timer_audio)
       }
   };

   const int gsMethodCount = sizeof(gsNativeMethods) / sizeof(JNINativeMethod);

   bool success = false;
   jclass clazz = env->FindClass(jenny_u8cast(FULL_CLASS_NAME));
   if (clazz != nullptr) {
       success = !env->RegisterNatives(clazz, gsNativeMethods, gsMethodCount);
       env->DeleteLocalRef(clazz);
   }
   return success;
#undef jenny_u8cast
}

} // endof namespace Native
} // endof namespace DeleteFn

